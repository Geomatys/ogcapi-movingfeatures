openapi: 3.0.2
info:
  title: "Building Blocks specified in OGC API - MovingFeatures - Part 1: Features Extension"
  version: 0.0.1
  description: >-
    This is the OpenAPI definition of Moving Features API specification that conforms to the OGC Moving Features Encoding Extension - JSON.
  contact:
    name: Taehoon Kim
    email: kim.taehoon@aist.go.jp
  license:
    name: OGC License
    url: "https://www.ogc.org/ogc/Document"
  x-logo:
    url: "https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png"
    backgroundColor: "#FFFFFF"
    altText: "OGC logo"
    href: "https://www.ogc.org/contacts"

tags:
  - name: Capabilities
    description: Essential characteristics of the information available from the API.
  - name: MovingFeatureCollection
    description: Collections of moving features to be logically managed by a user.
  - name: MovingFeatures
    description: Moving feature data, including the temporal geometry, temporal properties, etc.
  - name: TemporalGeometryCollection
    description: The spatial change over time (temporal geometry), representing the movement of the rigid or nonrigid body of a feature.
  - name: TemporalPropertyCollection
    description: The thematic change over time (temporal property), representing the variation of the value of any descriptive characteristic of a feature.
paths:
  /:
    get:
      operationId: getLandingpage
      summary: Landing page
      description: The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset.
      tags:
        - Capabilities
      responses:
        '200':
          $ref: "responses/LandingPage.yaml"
        '500':
          $ref: "responses/ServerError.yaml"

  /conformance:
    get:
      operationId: getConformance
      summary: Information about specifications that this API conforms to
      description: A list of all conformance classes specified in a standard that the server conforms to.
      tags:
        - Capabilities
      responses:
        '200':
          $ref: "responses/Conformance.yaml"
        '500':
          $ref: "responses/ServerError.yaml"

  /api:
    get:
      operationId: getAPIList
      summary: API definition
      description: A list of all API definition
      tags:
        - Capabilities
      responses:
        '200':
          description: A list of all API definition generated by Open API Specification
          content:
            application/json:
              example:
                $ref: "openapi-movingfeatures-1.json"
        '500':
          $ref: "responses/ServerError.yaml"

  /collections:
    get:
      operationId: searchCatalog
      summary: Retrieve catalogs of moving features collection
      description: |
        A user can retrieve catalogs to access collections by simple filtering and a limit.
      tags:
        - Capabilities
      parameters:
        - $ref: "parameters/bbox.yaml"
        - $ref: "parameters/datetime.yaml"
        - $ref: "parameters/limit.yaml"
      responses:
        '200':
          $ref: "responses/Collections.yaml"
        '500':
          $ref: "responses/ServerError.yaml"
    post:
      operationId: registerMetadata
      summary: Register metadata about a collection of moving features
      description: |
        A user SHOULD register metadata about a collection of moving features into the system.
      tags:
        - MovingFeatureCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/requestBody/collection.yaml"
            example:
              $ref: "examples/collections_post.json"
      responses:
        '201':
          description: Successful create a collection to manage moving features.
          headers:
            Location:
              description: A URI of the newly added resource
              schema:
                type: string
                example: "https://data.example.org/collections/mfc1"
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}:
    get:
      operationId: accessMetadata
      summary: Access metadata about the collection
      description: |
        A user can access metadata with id `collectionId`.
      tags:
        - MovingFeatureCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
      responses:
        '200':
          $ref: "responses/Collection.yaml"
        '404':
          description: A collection with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"
    delete:
      operationId: deleteCollection
      summary: Delete the collection
      description: |
        The collection catalog with id `collectionId` and including metadata and moving features SHOULD be deleted.
      tags:
        - MovingFeatureCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
      responses:
        '204':
          description: Successfully deleted.
        '404':
          description: A collection with the specified name was not found.
        '500':
          $ref: "responses/ServerError.yaml"
    put:
      operationId: replaceMetadata
      summary: Replace metadata about the collection
      description: |
        A user SHOULD replace metadata with id `collectionId`.
      tags:
        - MovingFeatureCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/requestBody/collection.yaml"
            example:
              $ref: "examples/collections_post.json"
      responses:
        '204':
          description: Successfully replaced.
        '404':
          description: A collection with the specified name was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items:
    get:
      operationId: retrieveMovingFeatures
      summary: Retrieve moving feature collection
      description: |
        A user can retrieve moving feature collection to access the static information of the moving feature by simple filtering and a limit.
      tags:
        - MovingFeatures
      parameters:
        - $ref: "parameters/bbox.yaml"
        - $ref: "parameters/datetime.yaml"
        - $ref: "parameters/limit.yaml"
      responses:
        '200':
          $ref: "responses/MovingFeatures.yaml"
        '404':
          description: A collection with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"
    post:
      operationId: insertMovingFeatures
      summary: Insert moving features
      description: |
        A user SHOULD insert a set of moving features or a moving feature into a collection with id `collectionId`.
        
        The request body schema SHALL follows the [MovingFeature object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#mfeature) 
        (and [MovingFeatureCollection object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#mfeaturecollection)) in the OGC MF-JSON.
      tags:
        - MovingFeatures
      parameters:
        - $ref: "parameters/collectionId.yaml"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/movingFeature"
                - $ref: "schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/movingFeatureCollection"
              example:
                - $ref: "examples/movingFeatures_MF_JSON.json"
      responses:
        '201':
          description: |
            Successful create a set of moving features or a moving feature into a specific collection.
          headers:
            Location:
              description: A URI of the newly added resource
              # TODO: id duplication issue should be mentioned
              schema:
                type: string
                example: "https://data.example.org/collections/mfc-1/items/mf-1"
        '404':
          description: A collection with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items/{mFeatureId}:
    get:
      operationId: accessMovingFeature
      summary: Access the static data of the moving feature
      description: |
        A user can access a static data of a moving feature with id `mFeatureId`.
        
        The static data of a moving feature is not included temporal geometries and temporal properties.
      tags:
        - MovingFeatures
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
      responses:
        '200':
          $ref: "responses/MovingFeature.yaml"
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"
    delete:
      operationId: deleteMovingFeature
      summary: Delete a single moving feature
      description: |
        The moving feature with id `mFeatureId` and including temporal geometries and properties SHOULD be deleted.
      tags:
        - MovingFeatures
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
      responses:
        '204':
          description: Successfully deleted.
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items/{mFeatureId}/tgeometries:
    get:
      operationId: retrieveTemporalGeometries
      summary: Retrieve the movement data of the single moving feature
      description: |
        A user can retrieve only the movement data of a moving feature with id `mFeatureId`.
      tags:
        - TemporalGeometryCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/leaf.yaml"
        - $ref: "parameters/bbox.yaml"
        - $ref: "parameters/datetime.yaml"
        - $ref: "parameters/limit.yaml"
      responses:
        '200':
          $ref: "responses/TemporalGeometryCollection.yaml"
        '500':
          $ref: "responses/ServerError.yaml"
    post:
      operationId: insertTemporalGeometry
      summary: Add movement data into the moving feature
      description: |
        A user SHOULD add more movement data into a moving feature with id `mFeatureId`.
        
        The request body schema SHALL follows the [TemporalGeometry object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#tgeometry) in the OGC MF-JSON.
      tags:
        - TemporalGeometryCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/temporalGeometry"
            example:
              $ref: "examples/temporalGeometry_MF_JSON.json"
              # TODO: TemporalComplexGeometry example also necessary?
      responses:
        '201':
          description: |
            Successful add more movement data into a specified moving feature.
          headers:
            Location:
              description: A URI of the newly added resource
              schema:
                type: string
                example: "https://data.example.org/collections/mfc-1/items/mf-1/tgeometries/tg-2"
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items/{mFeatureId}/tgeometries/{tGeometryId}:
    delete:
      operationId: deleteTemporalGeometry
      summary: Delete a singe temporal geometry
      description: |
        The temporal geometry with id `tGeometryId` SHOULD be deleted.
      tags:
        - TemporalGeometryCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/tGeometryId.yaml"
      responses:
        '204':
          description: Successfully deleted.
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
            - Or a temporal geometry with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items/{mFeatureId}/tproperties:
    get:
      operationId: retrieveTemporalPropertyCollection
      summary: Retrieve the static information of the temporal properties data
      description: |
        A user can retrieve only the static information of the temporal property data that included a single moving feature with id `mFeatureId`.
        
        The static data of a temporal property is not included temporal values (property `values`).
      tags:
        - TemporalPropertyCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/datetime.yaml"
        - $ref: "parameters/limit.yaml"
      responses:
        '200':
          $ref: "responses/TemporalPropertyCollection.yaml"
        '500':
          $ref: "responses/ServerError.yaml"
    post:
      operationId: insertTemporalProperty
      summary: Add temporal property data
      description: |
        A user SHOULD add more temporal property data into a moving feature with id `mFeatureId`.
        
        The request body schema SHALL follows the [TemporalProperties object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#tproperties) in the OGC MF-JSON.
      tags:
        - TemporalPropertyCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/temporalProperties"
            example:
              $ref: "examples/temporalProperty_MF_JSON.json"
              # TODO: If the user adds two or more temporal properties, how to return its resource URL?
      responses:
        '201':
          description: |
            Successful add more temporal property into a specified moving feature.
          headers:
            Location:
              description: A URI of the newly added resource
              schema:
                type: string
                example: "https://data.example.org/collections/mfc-1/items/mf-1/tproperties/tp-1"
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"

  /collections/{collectionId}/items/{mFeatureId}/tproperties/{tPropertyName}:
    get:
      operationId: retrieveTemporalProperty
      summary: Retrieve a temporal property
      description: |
        A user can retrieve only the temporal values with a specified name `tPropertyName` of temporal property.
      tags:
        - TemporalPropertyCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/tPropertyName.yaml"
        - $ref: "parameters/leaf.yaml"
        - $ref: "parameters/datetime.yaml"
        - $ref: "parameters/limit.yaml"
      responses:
        '200':
          $ref: "responses/TemporalValueCollection.yaml"
        '500':
          $ref: "responses/ServerError.yaml"
    post:
      operationId: insertTemporalValues
      summary: Add temporal values data
      description: |
        A user SHOULD add more temporal values data into a temporal property with id `tPropertyName`.
      tags:
        - TemporalPropertyCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/tPropertyName.yaml"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/temporalValue.yaml"
            example:
              $ref: "examples/temporalValues.json"
      responses:
        '201':
          description: |
            Successful add more temporal values data into a specified temporal property.
          headers:
            Location:
              description: A URI of the newly added resource
              schema:
                type: string
                example: "https://data.example.org/collections/mfc-1/items/mf-1/tproperties/tproperty-1/pvalue/pvalue-1"
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
            - Or a temporal property with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"
    delete:
      operationId: deleteTemporalProperty
      summary: Delete a specified temporal property
      description: |
        The temporal property with id `tPropertyName` SHOULD be deleted.
      tags:
        - TemporalPropertyCollection
      parameters:
        - $ref: "parameters/collectionId.yaml"
        - $ref: "parameters/mFeatureId.yaml"
        - $ref: "parameters/tPropertyName.yaml"
      responses:
        '204':
          description: Successfully deleted.
        '404':
          description: |
            - A collection with the specified id was not found.
            - Or a moving feature with the specified id was not found.
            - Or a temporal property with the specified id was not found.
        '500':
          $ref: "responses/ServerError.yaml"